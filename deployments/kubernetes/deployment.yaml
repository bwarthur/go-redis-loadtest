apiVersion: apps/v1beta2
kind: Deployment
metadata:
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-dev-redis-ha-redis-load
  name: redis-load
  namespace: dev-redis-ha
spec:
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-dev-redis-ha-redis-load
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        workload.user.cattle.io/workloadselector: deployment-dev-redis-ha-redis-load
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metricz"
        prometheus.io/format: "prometheus"
    spec:
      containers:
      - args:
        - -envoy-addr=redis-ha-envoy:6379
        image: kc0isg/redis-load
        imagePullPolicy: Always
        name: redis-load
        ports:
          - name: metrics
            containerPort: 8080
            protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          procMount: Default
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30